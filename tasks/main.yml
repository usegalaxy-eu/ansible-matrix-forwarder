---
- name: Ensure Go and zip are installed.
  ansible.builtin.package:
    name:
      - go
      - zip
    state: present
  become: true

- name: Compile and install the application.
  block:
    - name: Allocate a temporary directory to compile the application.
      ansible.builtin.tempfile:
        prefix: ansible.usegalaxy-eu.grafana_matrix_forwarder.
        state: directory
      changed_when: false
      register: __grafana_matrix_forwarder_tempdir

    - name: Download and extract source code.
      ansible.builtin.unarchive:
        remote_src: true
        src: "https://gitlab.com/hectorjsmith/grafana-matrix-forwarder/-/archive/{{ grafana_matrix_forwarder_version }}/grafana-matrix-forwarder-{{ grafana_matrix_forwarder_version }}.zip"
        dest: "{{ __grafana_matrix_forwarder_tempdir.path }}"
      changed_when: false

    - name: Define compilation directory.
      block:
        - name: Assume the compiler should be run on the root directory of the archive.
          ansible.builtin.set_fact:
            __grafana_matrix_forwarder_compilation_directory: "{{ __grafana_matrix_forwarder_tempdir.path }}/grafana-matrix-forwarder-{{ grafana_matrix_forwarder_version }}"

        - name: Check if the "src" subdirectory exists.
          ansible.builtin.stat:
            path: "{{ __grafana_matrix_forwarder_compilation_directory }}/src"
          register: __grafana_matrix_forwarder_src_dir_stat

        - name: Build in the "src" subdirectory if it exists.
          ansible.builtin.set_fact:
            __grafana_matrix_forwarder_compilation_directory: "{{ __grafana_matrix_forwarder_compilation_directory }}/src"
          when: __grafana_matrix_forwarder_src_dir_stat.stat.exists

    - name: Compile the application from source.
      ansible.builtin.command:
        chdir: "{{ __grafana_matrix_forwarder_compilation_directory }}"
        cmd: go build -trimpath -buildvcs=false -ldflags="-s -w -buildid=" app.go
        # the arguments `-trimpath -buildvcs=false -ldflags="-s -w -buildid="`
        # make the build deterministic
      changed_when: false

    - name: Check whether a binary exists in the configured path.
      ansible.builtin.stat:
        path: "{{ grafana_matrix_forwarder_path }}"
      register: __grafana_matrix_forwarder_path_exists

    - name: Compare the sha256sums of the installed binary and the compiled one.
      when: __grafana_matrix_forwarder_path_exists.stat.exists
      block: 
      - name: Compute sha256sum of the existing binary.
        ansible.builtin.shell:
          executable: /bin/bash
          cmd: |
            set -o pipefail
            sha256sum {{ grafana_matrix_forwarder_path }}  | cut -d ' ' -f 1
        register: __grafana_matrix_forwarder_sha256sum_installed
        changed_when: false

      - name: Compute sha256sum of the compiled binary.
        ansible.builtin.shell:
          executable: /bin/bash
          cmd: |
            set -o pipefail
            sha256sum {{ __grafana_matrix_forwarder_compilation_directory }}/app | cut -d ' ' -f 1
        register: __grafana_matrix_forwarder_sha256sum_compiled
        changed_when: false      

      - name: Compare sha256sums.
        ansible.builtin.set_fact:
          __grafana_matrix_forwarder_install: "{{ __grafana_matrix_forwarder_sha256sum_installed.stdout != __grafana_matrix_forwarder_sha256sum_compiled.stdout }}"

    - name: Install the application binary.
      become: true
      ansible.builtin.copy:
        remote_src: true
        src: "{{ __grafana_matrix_forwarder_compilation_directory }}/app"
        dest: "{{ grafana_matrix_forwarder_path }}"
        owner: "{{ grafana_matrix_forwarder_owner | default(omit) }}"
        group: "{{ grafana_matrix_forwarder_group | default(omit) }}"
        mode: "{{ grafana_matrix_forwarder_mode | default('0755') }}"
      when: __grafana_matrix_forwarder_install | default(true)
      # install the binary only when the two sha256sums differ (and therefore,
      # report no changes when the complied binary is identical)

  always:
    - name: Clean up the temporary directory.
      ansible.builtin.file:
        path: "{{ __grafana_matrix_forwarder_tempdir.path }}"
        state: absent
      when: __grafana_matrix_forwarder_tempdir is defined
      changed_when: false

- name: Install systemd unit file
  ansible.builtin.template:
    src: matrix-forwarder.service.j2
    dest: /etc/systemd/system/matrix-forwarder.service
    mode: "0600"
    owner: root
    group: root
  become: yes

- name: Daemon reload
  become: true
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable service
  become: true
  tags: molecule-idempotence-notest
  # The test runs with invalid credentials, so the service fails as soon as it
  # starts. When the idempotence test runs, it fails because the service needs
  # to be started again. Adding this tag makes Molecule ignore this task.
  # See https://ansible.readthedocs.io/projects/molecule/configuration/#ansible
  # for more information.
  ansible.builtin.systemd:
    name: matrix-forwarder
    enabled: true
    state: started
